//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PhotoGallery.Client.Reference.PhotoGalleryServ {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRegisterDto", Namespace="http://schemas.datacontract.org/2004/07/PhotoGallery.Dto")]
    [System.SerializableAttribute()]
    public partial class UserRegisterDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceValidationError", Namespace="http://schemas.datacontract.org/2004/07/PhotoGalleryWcfService.Exceptions")]
    [System.SerializableAttribute()]
    public partial class ServiceValidationError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDto", Namespace="http://schemas.datacontract.org/2004/07/PhotoGallery.Dto")]
    [System.SerializableAttribute()]
    public partial class UserDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceDataError", Namespace="http://schemas.datacontract.org/2004/07/PhotoGalleryWcfService.Exceptions")]
    [System.SerializableAttribute()]
    public partial class ServiceDataError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfoDto", Namespace="http://schemas.datacontract.org/2004/07/PhotoGallery.Dto")]
    [System.SerializableAttribute()]
    public partial class UserInfoDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhotoDto", Namespace="http://schemas.datacontract.org/2004/07/PhotoGallery.Dto")]
    [System.SerializableAttribute()]
    public partial class PhotoDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AverageRatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentUserRatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImagePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PhotoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AverageRating {
            get {
                return this.AverageRatingField;
            }
            set {
                if ((this.AverageRatingField.Equals(value) != true)) {
                    this.AverageRatingField = value;
                    this.RaisePropertyChanged("AverageRating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentUserRating {
            get {
                return this.CurrentUserRatingField;
            }
            set {
                if ((this.CurrentUserRatingField.Equals(value) != true)) {
                    this.CurrentUserRatingField = value;
                    this.RaisePropertyChanged("CurrentUserRating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImagePath {
            get {
                return this.ImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagePathField, value) != true)) {
                    this.ImagePathField = value;
                    this.RaisePropertyChanged("ImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhotoId {
            get {
                return this.PhotoIdField;
            }
            set {
                if ((this.PhotoIdField.Equals(value) != true)) {
                    this.PhotoIdField = value;
                    this.RaisePropertyChanged("PhotoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoOwner {
            get {
                return this.PhotoOwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoOwnerField, value) != true)) {
                    this.PhotoOwnerField = value;
                    this.RaisePropertyChanged("PhotoOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhotoInfoDto", Namespace="http://schemas.datacontract.org/2004/07/PhotoGallery.Dto")]
    [System.SerializableAttribute()]
    public partial class PhotoInfoDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImagePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PhotoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImagePath {
            get {
                return this.ImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagePathField, value) != true)) {
                    this.ImagePathField = value;
                    this.RaisePropertyChanged("ImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhotoId {
            get {
                return this.PhotoIdField;
            }
            set {
                if ((this.PhotoIdField.Equals(value) != true)) {
                    this.PhotoIdField = value;
                    this.RaisePropertyChanged("PhotoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PhotoGalleryServ.IPhotoGalleryService")]
    public interface IPhotoGalleryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/CreateUser", ReplyAction="http://tempuri.org/IPhotoGalleryService/CreateUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PhotoGallery.Client.Reference.PhotoGalleryServ.ServiceValidationError), Action="http://tempuri.org/IPhotoGalleryService/CreateUserServiceValidationErrorFault", Name="ServiceValidationError", Namespace="http://schemas.datacontract.org/2004/07/PhotoGalleryWcfService.Exceptions")]
        void CreateUser(PhotoGallery.Client.Reference.PhotoGalleryServ.UserRegisterDto user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/CreateUser", ReplyAction="http://tempuri.org/IPhotoGalleryService/CreateUserResponse")]
        System.Threading.Tasks.Task CreateUserAsync(PhotoGallery.Client.Reference.PhotoGalleryServ.UserRegisterDto user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/AuthenticateUser", ReplyAction="http://tempuri.org/IPhotoGalleryService/AuthenticateUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PhotoGallery.Client.Reference.PhotoGalleryServ.ServiceDataError), Action="http://tempuri.org/IPhotoGalleryService/AuthenticateUserServiceDataErrorFault", Name="ServiceDataError", Namespace="http://schemas.datacontract.org/2004/07/PhotoGalleryWcfService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(PhotoGallery.Client.Reference.PhotoGalleryServ.ServiceValidationError), Action="http://tempuri.org/IPhotoGalleryService/AuthenticateUserServiceValidationErrorFau" +
            "lt", Name="ServiceValidationError", Namespace="http://schemas.datacontract.org/2004/07/PhotoGalleryWcfService.Exceptions")]
        PhotoGallery.Client.Reference.PhotoGalleryServ.UserDto AuthenticateUser(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/AuthenticateUser", ReplyAction="http://tempuri.org/IPhotoGalleryService/AuthenticateUserResponse")]
        System.Threading.Tasks.Task<PhotoGallery.Client.Reference.PhotoGalleryServ.UserDto> AuthenticateUserAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/FindUserByUserLogin", ReplyAction="http://tempuri.org/IPhotoGalleryService/FindUserByUserLoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PhotoGallery.Client.Reference.PhotoGalleryServ.ServiceDataError), Action="http://tempuri.org/IPhotoGalleryService/FindUserByUserLoginServiceDataErrorFault", Name="ServiceDataError", Namespace="http://schemas.datacontract.org/2004/07/PhotoGalleryWcfService.Exceptions")]
        PhotoGallery.Client.Reference.PhotoGalleryServ.UserDto FindUserByUserLogin(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/FindUserByUserLogin", ReplyAction="http://tempuri.org/IPhotoGalleryService/FindUserByUserLoginResponse")]
        System.Threading.Tasks.Task<PhotoGallery.Client.Reference.PhotoGalleryServ.UserDto> FindUserByUserLoginAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/GetUserPublicInfo", ReplyAction="http://tempuri.org/IPhotoGalleryService/GetUserPublicInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PhotoGallery.Client.Reference.PhotoGalleryServ.ServiceDataError), Action="http://tempuri.org/IPhotoGalleryService/GetUserPublicInfoServiceDataErrorFault", Name="ServiceDataError", Namespace="http://schemas.datacontract.org/2004/07/PhotoGalleryWcfService.Exceptions")]
        PhotoGallery.Client.Reference.PhotoGalleryServ.UserInfoDto GetUserPublicInfo(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/GetUserPublicInfo", ReplyAction="http://tempuri.org/IPhotoGalleryService/GetUserPublicInfoResponse")]
        System.Threading.Tasks.Task<PhotoGallery.Client.Reference.PhotoGalleryServ.UserInfoDto> GetUserPublicInfoAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/UpdateUserEmail", ReplyAction="http://tempuri.org/IPhotoGalleryService/UpdateUserEmailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PhotoGallery.Client.Reference.PhotoGalleryServ.ServiceValidationError), Action="http://tempuri.org/IPhotoGalleryService/UpdateUserEmailServiceValidationErrorFaul" +
            "t", Name="ServiceValidationError", Namespace="http://schemas.datacontract.org/2004/07/PhotoGalleryWcfService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(PhotoGallery.Client.Reference.PhotoGalleryServ.ServiceDataError), Action="http://tempuri.org/IPhotoGalleryService/UpdateUserEmailServiceDataErrorFault", Name="ServiceDataError", Namespace="http://schemas.datacontract.org/2004/07/PhotoGalleryWcfService.Exceptions")]
        PhotoGallery.Client.Reference.PhotoGalleryServ.UserDto UpdateUserEmail(int userId, string newEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/UpdateUserEmail", ReplyAction="http://tempuri.org/IPhotoGalleryService/UpdateUserEmailResponse")]
        System.Threading.Tasks.Task<PhotoGallery.Client.Reference.PhotoGalleryServ.UserDto> UpdateUserEmailAsync(int userId, string newEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/UpdateUserPassword", ReplyAction="http://tempuri.org/IPhotoGalleryService/UpdateUserPasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PhotoGallery.Client.Reference.PhotoGalleryServ.ServiceValidationError), Action="http://tempuri.org/IPhotoGalleryService/UpdateUserPasswordServiceValidationErrorF" +
            "ault", Name="ServiceValidationError", Namespace="http://schemas.datacontract.org/2004/07/PhotoGalleryWcfService.Exceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(PhotoGallery.Client.Reference.PhotoGalleryServ.ServiceDataError), Action="http://tempuri.org/IPhotoGalleryService/UpdateUserPasswordServiceDataErrorFault", Name="ServiceDataError", Namespace="http://schemas.datacontract.org/2004/07/PhotoGalleryWcfService.Exceptions")]
        PhotoGallery.Client.Reference.PhotoGalleryServ.UserDto UpdateUserPassword(int userId, string currentPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/UpdateUserPassword", ReplyAction="http://tempuri.org/IPhotoGalleryService/UpdateUserPasswordResponse")]
        System.Threading.Tasks.Task<PhotoGallery.Client.Reference.PhotoGalleryServ.UserDto> UpdateUserPasswordAsync(int userId, string currentPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/UpdateUserInfo", ReplyAction="http://tempuri.org/IPhotoGalleryService/UpdateUserInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PhotoGallery.Client.Reference.PhotoGalleryServ.ServiceDataError), Action="http://tempuri.org/IPhotoGalleryService/UpdateUserInfoServiceDataErrorFault", Name="ServiceDataError", Namespace="http://schemas.datacontract.org/2004/07/PhotoGalleryWcfService.Exceptions")]
        PhotoGallery.Client.Reference.PhotoGalleryServ.UserDto UpdateUserInfo(int userId, string firstName, string secondName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/UpdateUserInfo", ReplyAction="http://tempuri.org/IPhotoGalleryService/UpdateUserInfoResponse")]
        System.Threading.Tasks.Task<PhotoGallery.Client.Reference.PhotoGalleryServ.UserDto> UpdateUserInfoAsync(int userId, string firstName, string secondName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/AddPhoto", ReplyAction="http://tempuri.org/IPhotoGalleryService/AddPhotoResponse")]
        void AddPhoto(PhotoGallery.Client.Reference.PhotoGalleryServ.PhotoDto photoDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/AddPhoto", ReplyAction="http://tempuri.org/IPhotoGalleryService/AddPhotoResponse")]
        System.Threading.Tasks.Task AddPhotoAsync(PhotoGallery.Client.Reference.PhotoGalleryServ.PhotoDto photoDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/GetPhotos", ReplyAction="http://tempuri.org/IPhotoGalleryService/GetPhotosResponse")]
        PhotoGallery.Client.Reference.PhotoGalleryServ.PhotoDto[] GetPhotos(int userId, System.Nullable<int> albumOwnerId, int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/GetPhotos", ReplyAction="http://tempuri.org/IPhotoGalleryService/GetPhotosResponse")]
        System.Threading.Tasks.Task<PhotoGallery.Client.Reference.PhotoGalleryServ.PhotoDto[]> GetPhotosAsync(int userId, System.Nullable<int> albumOwnerId, int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/GetUserAlbum", ReplyAction="http://tempuri.org/IPhotoGalleryService/GetUserAlbumResponse")]
        PhotoGallery.Client.Reference.PhotoGalleryServ.PhotoDto[] GetUserAlbum(int userId, int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/GetUserAlbum", ReplyAction="http://tempuri.org/IPhotoGalleryService/GetUserAlbumResponse")]
        System.Threading.Tasks.Task<PhotoGallery.Client.Reference.PhotoGalleryServ.PhotoDto[]> GetUserAlbumAsync(int userId, int page, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/GetPhotoInfo", ReplyAction="http://tempuri.org/IPhotoGalleryService/GetPhotoInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PhotoGallery.Client.Reference.PhotoGalleryServ.ServiceDataError), Action="http://tempuri.org/IPhotoGalleryService/GetPhotoInfoServiceDataErrorFault", Name="ServiceDataError", Namespace="http://schemas.datacontract.org/2004/07/PhotoGalleryWcfService.Exceptions")]
        PhotoGallery.Client.Reference.PhotoGalleryServ.PhotoInfoDto GetPhotoInfo(int photoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/GetPhotoInfo", ReplyAction="http://tempuri.org/IPhotoGalleryService/GetPhotoInfoResponse")]
        System.Threading.Tasks.Task<PhotoGallery.Client.Reference.PhotoGalleryServ.PhotoInfoDto> GetPhotoInfoAsync(int photoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/UpdatePhotoInfo", ReplyAction="http://tempuri.org/IPhotoGalleryService/UpdatePhotoInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PhotoGallery.Client.Reference.PhotoGalleryServ.ServiceDataError), Action="http://tempuri.org/IPhotoGalleryService/UpdatePhotoInfoServiceDataErrorFault", Name="ServiceDataError", Namespace="http://schemas.datacontract.org/2004/07/PhotoGalleryWcfService.Exceptions")]
        void UpdatePhotoInfo(int photoId, string photoName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/UpdatePhotoInfo", ReplyAction="http://tempuri.org/IPhotoGalleryService/UpdatePhotoInfoResponse")]
        System.Threading.Tasks.Task UpdatePhotoInfoAsync(int photoId, string photoName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/DeletePhoto", ReplyAction="http://tempuri.org/IPhotoGalleryService/DeletePhotoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PhotoGallery.Client.Reference.PhotoGalleryServ.ServiceDataError), Action="http://tempuri.org/IPhotoGalleryService/DeletePhotoServiceDataErrorFault", Name="ServiceDataError", Namespace="http://schemas.datacontract.org/2004/07/PhotoGalleryWcfService.Exceptions")]
        void DeletePhoto(int photoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/DeletePhoto", ReplyAction="http://tempuri.org/IPhotoGalleryService/DeletePhotoResponse")]
        System.Threading.Tasks.Task DeletePhotoAsync(int photoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/SetPhotoRating", ReplyAction="http://tempuri.org/IPhotoGalleryService/SetPhotoRatingResponse")]
        void SetPhotoRating(int photoId, int userId, int rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhotoGalleryService/SetPhotoRating", ReplyAction="http://tempuri.org/IPhotoGalleryService/SetPhotoRatingResponse")]
        System.Threading.Tasks.Task SetPhotoRatingAsync(int photoId, int userId, int rating);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPhotoGalleryServiceChannel : PhotoGallery.Client.Reference.PhotoGalleryServ.IPhotoGalleryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PhotoGalleryServiceClient : System.ServiceModel.ClientBase<PhotoGallery.Client.Reference.PhotoGalleryServ.IPhotoGalleryService>, PhotoGallery.Client.Reference.PhotoGalleryServ.IPhotoGalleryService {
        
        public PhotoGalleryServiceClient() {
        }
        
        public PhotoGalleryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PhotoGalleryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhotoGalleryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhotoGalleryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateUser(PhotoGallery.Client.Reference.PhotoGalleryServ.UserRegisterDto user) {
            base.Channel.CreateUser(user);
        }
        
        public System.Threading.Tasks.Task CreateUserAsync(PhotoGallery.Client.Reference.PhotoGalleryServ.UserRegisterDto user) {
            return base.Channel.CreateUserAsync(user);
        }
        
        public PhotoGallery.Client.Reference.PhotoGalleryServ.UserDto AuthenticateUser(string login, string password) {
            return base.Channel.AuthenticateUser(login, password);
        }
        
        public System.Threading.Tasks.Task<PhotoGallery.Client.Reference.PhotoGalleryServ.UserDto> AuthenticateUserAsync(string login, string password) {
            return base.Channel.AuthenticateUserAsync(login, password);
        }
        
        public PhotoGallery.Client.Reference.PhotoGalleryServ.UserDto FindUserByUserLogin(string login) {
            return base.Channel.FindUserByUserLogin(login);
        }
        
        public System.Threading.Tasks.Task<PhotoGallery.Client.Reference.PhotoGalleryServ.UserDto> FindUserByUserLoginAsync(string login) {
            return base.Channel.FindUserByUserLoginAsync(login);
        }
        
        public PhotoGallery.Client.Reference.PhotoGalleryServ.UserInfoDto GetUserPublicInfo(string login) {
            return base.Channel.GetUserPublicInfo(login);
        }
        
        public System.Threading.Tasks.Task<PhotoGallery.Client.Reference.PhotoGalleryServ.UserInfoDto> GetUserPublicInfoAsync(string login) {
            return base.Channel.GetUserPublicInfoAsync(login);
        }
        
        public PhotoGallery.Client.Reference.PhotoGalleryServ.UserDto UpdateUserEmail(int userId, string newEmail) {
            return base.Channel.UpdateUserEmail(userId, newEmail);
        }
        
        public System.Threading.Tasks.Task<PhotoGallery.Client.Reference.PhotoGalleryServ.UserDto> UpdateUserEmailAsync(int userId, string newEmail) {
            return base.Channel.UpdateUserEmailAsync(userId, newEmail);
        }
        
        public PhotoGallery.Client.Reference.PhotoGalleryServ.UserDto UpdateUserPassword(int userId, string currentPassword, string newPassword) {
            return base.Channel.UpdateUserPassword(userId, currentPassword, newPassword);
        }
        
        public System.Threading.Tasks.Task<PhotoGallery.Client.Reference.PhotoGalleryServ.UserDto> UpdateUserPasswordAsync(int userId, string currentPassword, string newPassword) {
            return base.Channel.UpdateUserPasswordAsync(userId, currentPassword, newPassword);
        }
        
        public PhotoGallery.Client.Reference.PhotoGalleryServ.UserDto UpdateUserInfo(int userId, string firstName, string secondName) {
            return base.Channel.UpdateUserInfo(userId, firstName, secondName);
        }
        
        public System.Threading.Tasks.Task<PhotoGallery.Client.Reference.PhotoGalleryServ.UserDto> UpdateUserInfoAsync(int userId, string firstName, string secondName) {
            return base.Channel.UpdateUserInfoAsync(userId, firstName, secondName);
        }
        
        public void AddPhoto(PhotoGallery.Client.Reference.PhotoGalleryServ.PhotoDto photoDto) {
            base.Channel.AddPhoto(photoDto);
        }
        
        public System.Threading.Tasks.Task AddPhotoAsync(PhotoGallery.Client.Reference.PhotoGalleryServ.PhotoDto photoDto) {
            return base.Channel.AddPhotoAsync(photoDto);
        }
        
        public PhotoGallery.Client.Reference.PhotoGalleryServ.PhotoDto[] GetPhotos(int userId, System.Nullable<int> albumOwnerId, int page, int pageSize) {
            return base.Channel.GetPhotos(userId, albumOwnerId, page, pageSize);
        }
        
        public System.Threading.Tasks.Task<PhotoGallery.Client.Reference.PhotoGalleryServ.PhotoDto[]> GetPhotosAsync(int userId, System.Nullable<int> albumOwnerId, int page, int pageSize) {
            return base.Channel.GetPhotosAsync(userId, albumOwnerId, page, pageSize);
        }
        
        public PhotoGallery.Client.Reference.PhotoGalleryServ.PhotoDto[] GetUserAlbum(int userId, int page, int pageSize) {
            return base.Channel.GetUserAlbum(userId, page, pageSize);
        }
        
        public System.Threading.Tasks.Task<PhotoGallery.Client.Reference.PhotoGalleryServ.PhotoDto[]> GetUserAlbumAsync(int userId, int page, int pageSize) {
            return base.Channel.GetUserAlbumAsync(userId, page, pageSize);
        }
        
        public PhotoGallery.Client.Reference.PhotoGalleryServ.PhotoInfoDto GetPhotoInfo(int photoId) {
            return base.Channel.GetPhotoInfo(photoId);
        }
        
        public System.Threading.Tasks.Task<PhotoGallery.Client.Reference.PhotoGalleryServ.PhotoInfoDto> GetPhotoInfoAsync(int photoId) {
            return base.Channel.GetPhotoInfoAsync(photoId);
        }
        
        public void UpdatePhotoInfo(int photoId, string photoName) {
            base.Channel.UpdatePhotoInfo(photoId, photoName);
        }
        
        public System.Threading.Tasks.Task UpdatePhotoInfoAsync(int photoId, string photoName) {
            return base.Channel.UpdatePhotoInfoAsync(photoId, photoName);
        }
        
        public void DeletePhoto(int photoId) {
            base.Channel.DeletePhoto(photoId);
        }
        
        public System.Threading.Tasks.Task DeletePhotoAsync(int photoId) {
            return base.Channel.DeletePhotoAsync(photoId);
        }
        
        public void SetPhotoRating(int photoId, int userId, int rating) {
            base.Channel.SetPhotoRating(photoId, userId, rating);
        }
        
        public System.Threading.Tasks.Task SetPhotoRatingAsync(int photoId, int userId, int rating) {
            return base.Channel.SetPhotoRatingAsync(photoId, userId, rating);
        }
    }
}
